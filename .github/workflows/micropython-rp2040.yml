name: Build MicroPython for RP2040

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libffi-dev git pkg-config cmake gcc-arm-none-eabi libnewlib-arm-none-eabi python3 python3-pip
        pip3 install pyserial

    - name: Clone Pico SDK
      run: |
        git clone https://github.com/raspberrypi/pico-sdk.git
        cd pico-sdk
        git submodule update --init
        echo "PICO_SDK_PATH=$PWD" >> $GITHUB_ENV

    - name: Clone MicroPython
      run: |
        git clone https://github.com/micropython/micropython.git
        cd micropython
        git submodule update --init

    - name: Build MicroPython
          run: |
            cd micropython
            make -C mpy-cross
            cd ports/rp2
            make submodules
            make
            echo "Listing directory structure:"
            ls -R

    - name: Package MicroPython
          run: |
            mkdir -p micropython_rp2
            cp micropython/ports/rp2/build*/firmware.* micropython_rp2/
            zip -r micropython_rp2.zip micropython_rp2
            
    - name: Debug Build Output
          run: |
            echo "Contents of micropython/ports/rp2:"
            ls -R micropython/ports/rp2

- name: Check MicroPython Version
      run: |
        cd micropython
        git rev-parse HEAD
        git describe --tags
        
    - name: Create Release and Upload Asset
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if ! gh release list | grep -q "v1.0.0"; then
          echo "Creating new release v1.0.0"
          gh release create v1.0.0 --title "Release v1.0.0" --notes "Initial release for RP2040" --generate-notes
        else
          echo "Release v1.0.0 already exists"
        fi
        
        MICROPYTHON_VERSION=$(cd micropython && git rev-parse --short HEAD)
        gh release upload v1.0.0 micropython_rp2.zip --clobber
        gh release edit v1.0.0 --notes "MicroPython version for RP2040: ${MICROPYTHON_VERSION}"